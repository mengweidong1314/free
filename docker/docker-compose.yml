version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: high-performance-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: high_performance
      MYSQL_USER: app
      MYSQL_PASSWORD: app123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - high-performance-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: high-performance-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - high-performance-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: high-performance-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - high-performance-network

  # Eureka服务注册中心
  eureka:
    image: openjdk:17-jre-alpine
    container_name: high-performance-eureka
    ports:
      - "8761:8761"
    volumes:
      - ./eureka:/app
    working_dir: /app
    command: java -jar eureka-server.jar
    networks:
      - high-performance-network

  # Sentinel控制台
  sentinel:
    image: openjdk:17-jre-alpine
    container_name: high-performance-sentinel
    ports:
      - "8080:8080"
    volumes:
      - ./sentinel:/app
    working_dir: /app
    command: java -jar sentinel-dashboard.jar
    networks:
      - high-performance-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: high-performance-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - high-performance-network

  # Grafana监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: high-performance-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - high-performance-network

  # Nginx负载均衡
  nginx:
    image: nginx:alpine
    container_name: high-performance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - user-service
      - order-service
      - payment-service
    networks:
      - high-performance-network

  # 用户服务
  user-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        SERVICE_NAME: user-service
    container_name: high-performance-user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      REDIS_HOST: redis
      EUREKA_HOST: eureka
    depends_on:
      - mysql
      - redis
      - eureka
    networks:
      - high-performance-network

  # 订单服务
  order-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        SERVICE_NAME: order-service
    container_name: high-performance-order-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      REDIS_HOST: redis
      EUREKA_HOST: eureka
    depends_on:
      - mysql
      - redis
      - eureka
    networks:
      - high-performance-network

  # 支付服务
  payment-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        SERVICE_NAME: payment-service
    container_name: high-performance-payment-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_HOST: mysql
      REDIS_HOST: redis
      EUREKA_HOST: eureka
    depends_on:
      - mysql
      - redis
      - eureka
    networks:
      - high-performance-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  high-performance-network:
    driver: bridge